#!/bin/bash
#By Dan Liew

function usage()
{
	echo "Usage: $0 [options] <input file> <destination directory>"
	echo "This program takes a collection of SMTLIBv2 queries in a KLEE \"queries.smt2\""
	echo "file and splits them into seperate queries. This queries are placed in the user's"
	echo "directory of choice."
	echo ""
	echo "<input file> - a queries.smt2 file generated by KLEE"
	echo "<destination directory> - The location to put the seperated query files"
	echo ""
	echo "Options"
	echo "--help  : Show this message"
}


#Check we have minimum number of arguments
if [ $# -lt 2 ]; then 
	usage
	exit;
fi

#Parse options
while [ -n $1 ] ; do

	if [ $( echo "$1" | grep -Ec '^--') -eq 1 ]; then

		#handle options
		case "$1" in
			--help)
				usage;
				exit 1;
				;;

			*)
				echo "Option $1 not recognised."
				exit 1;
				;;
		esac
	else
		break;
	fi

	#grab next argument
	shift
done

#The remaining arguments are the input and directory
if [ $# -ne 2 ]; then
	echo "<input file> and <destination directory> must be specified"
	exit 1;
fi

INPUT="$1"

#get absolute path
INPUT=$(realpath "${INPUT}")

DEST_DIR="$2"

#Strip trailing slashes from DEST_DIR
DEST_DIR=$( echo "${DEST_DIR}" | sed 's#/\+$##')

#Check DEST_DIR is a directory
if [ ! -d "${DEST_DIR}" ]; then
	echo "\"${DEST_DIR}\" is not a directory!"
	exit 1;
fi

#Check input exists
if [ ! -f "${INPUT}" ]; then
	echo "\"${INPUT}\" cannot be read."
	exit 1;
fi

#Determine number of queries
NUMBER_OF_QUERIES=$(tac "${INPUT}" | grep -E --max-count=1 '^;SMTLIBv2' | sed 's/^;SMTLIBv2 Query \([0-9]\+\).\+/\1/' )
echo "File appears to have ${NUMBER_OF_QUERIES} queries."

#determine number of digits.
NUMBER_OF_DIGITS=$( echo -n "${NUMBER_OF_QUERIES}" | wc -m)

cd "${DEST_DIR}" || { echo "Failed to change directory to ${DEST_DIR}"; exit 1;}

echo "Running csplit..."
csplit --quiet --prefix="query." --suffix-format="%0${NUMBER_OF_DIGITS}d.smt2" "${INPUT}" '/;SMTLIBv2/' '{*}'

#Remove empty query
FILE_TO_REMOVE="query."

#Add necessary number of zeros.
for (( c=0 ; c < ${NUMBER_OF_DIGITS} ; c++ )) 
do
	FILE_TO_REMOVE="${FILE_TO_REMOVE}0"
done

FILE_TO_REMOVE="${FILE_TO_REMOVE}.smt2"

rm "${FILE_TO_REMOVE}"

echo "Done"

