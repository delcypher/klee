#ifndef KLEE_EXPRSMTLIBPRINTER_H
#define KLEE_EXPRSMTLIBPRINTER_H

#include <ostream>
#include <string>
#include <set>
#include <klee/Constraints.h>
#include <klee/Expr.h>

namespace klee {

///Base Class for SMTLIBv2 printer for Expr trees
class ExprSMTLIBPrinter
{
public:
	///Output stream to write to
	std::ostream& o;
	const ConstraintManager& cm;

	///Contains the arrays found during scans
	std::set<const Array*> usedArrays;

private:
	///Indicates if there were any constant arrays founds during a scan()
	bool haveConstantArray;

public:
	ExprSMTLIBPrinter(std::ostream& output, const ConstraintManager& constraintM) :
		o(output), cm(constraintM), usedArrays(), haveConstantArray(false) {}

	void generateOutput();

	enum Logics
	{
		QF_ABV,
		QF_AUFBV
	};

protected:

	virtual void printNotice() { o << "; This file conforms to SMTLIBv2 and was generated by KLEE" << std::endl;}

	virtual void printOptions() { };

	virtual void printSetLogic(ExprSMTLIBPrinter::Logics logic);

	virtual void printArrayDeclarations();

	virtual void printConstraints();

	///Print the S-expression(s) to ask for satisfiability, get-value etc...
	virtual void printAction();

	///Scan Expression recursively for
	/// * Arrays
	void scan(const ref<Expr>& e);

private:

	///Helper function for scan() that scans the expressions of an update node
	void scanUpdates(const UpdateNode* un);


};

}

#endif
